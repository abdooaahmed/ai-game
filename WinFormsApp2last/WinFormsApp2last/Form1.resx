<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAHJQTFRFGhoa
        ////AAAAFxcXFBQUQUFBNjY2Dg4OgYGB9fX1qampXV1d6Ojo7OzsHBwcysrKlZWVSUlJZWVlCAgIurq6
        VlZW8/PzhISEOzs7JSUlT09P29vbiYmJoqKiICAgwcHBb29vk5OT0tLSeHh4LS0tsLCwpP3ViAAABE9J
        REFUeF7t2mt7ojoUhmGSoFEHaxWtWqeH0fb//8UdcElWAro5hLko896fbBD1qQoBiQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEYufkTRnQo0nqOhGxo1aMBStMBSpUfuzdPkkS/vhcQ0ntM0
        eKUONDyZ+InqixbcHKZHLWVa/lf0IJ6KR54l3Y/IF1qQeeWJKkpoWAhvpUguaEFhvkxO37OD9O/Zg6aF
        c1qQ2fKFSjUpJKff/Td2KRQH9jFrVWjezJns+bPaqfCNLW1ZKMTq3f0+h9apcK7thqh1oUiOvSZ2KhS/
        7eL2hSKJ+vygditcBikUH/4KIXUrFJ8pLehUyB4mvI6F52J5p8LEXyMgXnj68+z75W0E/EJR3KFu4cI8
        ydtiu6Q/yaa/N5EXrmSJv5UrFRZfobqFO3rk9QcN5Fb9vYluIQ3eVyos9vp1C29vupZ7Gsn1NxPvXLig
        lZoWmtFnGspcevuYdi4U6fW/37xQSbuGMz0Kq3vhn+tazQudN9FulEPrXkh7/RaF8ZrGjP72F90LxSVf
        rUWh0naVF/9YO5gAhae2hZE80aBROjEQSoBCscledKtCtk90ThiEFKIwX69V4TcNGnw8qNaFyZZuGNkn
        7IcUOugeDlu4nNANIzth06rwznhQvDBZOKo2bqxQnumWYY71f8R76CmfDnYK9S+6ZZiDrJ9YyE7CFFjh
        E9vWv2g1ysIZ3TT2coyFsbaHsadRFio+c96kYyxUmm4bZznGQueVT9g0ejyF8Rf9YWzZ8exwC+eMmP/P
        /tAUOlPn4w8o9GZtFYF+oX6lv4yF3T0OuNDstwt0B5dXGLGpm3nbbwZcSIP3+YXpJ/3pqF14ZzyojoUR
        P19WGNN7GPGpW2FUhWzEql3INsW74RbyM9ekdiE7E7Ue3JmoW6F6pwGmZiE/mzifDrbQ+TKRmoUxOxGy
        rJpBBdG9ULMz16RmIf/16XrStQ/dC53txVW9QsW/ht9DLtQ7GirUK3R2NPshFzqbxFydQiXZmSwh7IaG
        ZsUZGunGLaRLIxnv+19ZWJq6PSw0T6K1efnOXsZ+DeV5dRPmFzdeeD6sfa9HN7GyMJLedQePCi8T86i7
        y7Z4oJy99EjSSCZ4YZX8VxfrTqHzk/zjwmr2UO2vF7KNe6a6UD3xy05bFLLLdoZZGMk3Gr1qWpjQtQCZ
        gRbGU+dr1bRwzZ5koIWRZL+1NS7c8PsPtZBPMZsW7py7D7UwkisazzQp/HhyrxUabKEzdatdOF/t/Mu8
        /3qhvz+kYSFe3p1CZ+pWKiwfYBnJx2xaujQwfKE67mcP7KduR0rjs9mFRm702j6Qf42a3nlPcvncTZWZ
        uVUc9eqNVcpvRaX5JPceN9Ak0rgsXWkX04KKRVE2D+XSVFedUc9pi0YAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAODfEUX/Ae9qQ/cIoGgDAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>